# grammar

Programa → Dcls Stmts fim
Dcls → Dcl Dcls | vazio
Dcl → floatdcl id | intdcl id
Stmts → Stmt Stmts | vazio
Stmt → id assign Expr 
                        | while ( Expr ) do Stmt Stmts endwhile 
                        | if ( Expr ) then Stmt Stmts StmtIf 
                        | print Expr

StmtIf → endif | else Stmt Stmts endif

ExprLogica -> Expr Comparador Expr
Comparador -> maior  | maiorIgual  |  menor  | menorIgual  | igual  | diferente
Expr -> Termo Expr'
Expr'-> vazio
Expr'-> adicao Termo Expr'
Expr'-> subtracao Termo Expr'
Termo-> Fator Termo'
Termo'-> multiplicacao Fator Termo' | vazio
Termo'-> divisao Fator Termo' 
Fator-> inum | id | fnum | ( Expr ) 

---

intdcl = crieUmInteiro
floatdcl = crieUmRacional
print = MostreNaTela
adicao = +
subtracao = -
multiplicacao = *
divisao =  / 
id = [a-z]+
inum = [0-9]+
fnum = [0-9]+.[0-9]+
assign = agoraEh
if = se
then = entao
endif = fimSe
else = senao
while = enquanto
do = faca
endwhile = fimEnquanto
maior = EhMaior
maiorIgual = EhMaiorIgual 
menor = EhMenor 
menorIgual = EhMenorIgual 
igual = EhIgual 
diferente = EhDiferente 
